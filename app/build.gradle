plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.ddairy.eyebrows"
        minSdkVersion 29
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        // Enables Android Studio to work with Compose.
        compose true

        // Disable unused AGP features
        buildConfig false
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion rootProject.composeVersion
    }

    packagingOptions {
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
}

dependencies {

    // ----------------- implementation -----------------
    /* Dependencies used in release.
     */

    // Import the BoM for the Firebase platform
    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    // Declare the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, you don't specify versions in Firebase library dependencies
    // TODO: How to get started: https://firebase.google.com/docs/analytics/get-started?platform=android#kotlin+ktx
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Does not come with the bom above.
    // TODO: How to get started: https://firebase.google.com/docs/admob/android/quick-start
    implementation 'com.google.android.gms:play-services-ads:20.5.0'


    // Jackson, used to deserialize objects to strings.
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.13.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.1"

    // Allows access to new APIs on older API versions of the platform TODO: Is this needed?
    implementation "androidx.appcompat:appcompat:1.4.0"

    // Android KTX is a set of Kotlin extensions that are included with Android Jetpack and other Android libraries.
    // The Core KTX module provides extensions for common libraries that are part of the Android framework. TODO: Is this needed?
    implementation "androidx.core:core-ktx:1.7.0"
    // The Fragment KTX module provides a number of extensions to simplify the fragment API.
    implementation "androidx.fragment:fragment-ktx:1.4.0"

    // Material Components for Android is a static library that you can add to your Android application in order to use APIs that provide implementations of the Material Design specification. TODO: Is this needed?
    implementation "com.google.android.material:material:1.6.0-alpha01"

    // Kotlin Standard Library JDK 8 extension
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.10"

    // New package for splash screens
    implementation "androidx.core:core-splashscreen:1.0.0-alpha02"

    // Datastore Preferences TODO: Can remove?
    // The Preferences DataStore implementation uses the DataStore and Preferences classes to persist simple key-value pairs to disk.
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    // Compose libraries
    implementation "androidx.compose.ui:ui:1.1.0-rc01"
    implementation "androidx.compose.ui:ui-tooling:1.1.0-rc01"
    implementation "androidx.compose.foundation:foundation:1.1.0-rc01"
    implementation "androidx.compose.foundation:foundation-layout:1.1.0-rc01"
    implementation "androidx.compose.runtime:runtime:1.1.0-rc01"
    implementation "androidx.compose.runtime:runtime-livedata:1.1.0-rc01"
    implementation "androidx.compose.material:material:1.1.0-rc01"
    implementation "androidx.compose.material:material-icons-extended:1.1.0-rc01"

    // Compose integration with Activity
    implementation "androidx.activity:activity-compose:1.4.0"

    // Compose integration with Navigation
    implementation "androidx.navigation:navigation-compose:2.4.0-rc01"

    // Accompanist is a group of libraries that aim to supplement Jetpack Compose with features that are commonly required by developers but not yet available.
    implementation "com.google.accompanist:accompanist-navigation-animation:0.22.0-rc"
    implementation "com.google.accompanist:accompanist-flowlayout:0.22.0-rc"

    // Kotlin extensions for 'lifecycle' artifact
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'

    // ----------------- androidTestImplementation -----------------
    /* adds dependency for androidTest source set
     * For android UI test. It needs virtual or real device (Espresso).
     * TODO: when writing these tests compare the dependencies to whats in the testing code lab.
     */

    // Android Core-Testing.
    // Helper for other arch dependencies, including JUnit test rules that can be used with LiveData.
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // Espresso dependencies.
    // The AndroidX Test Library provides an extensive framework for testing Android apps.
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.4.0"

    // Assertions.
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    // Coroutines support libraries for Kotlin.
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'

    // Compose libraries.
    androidTestImplementation "androidx.compose.ui:ui-test:1.1.0-rc01"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.1.0-rc01"

    // ----------------- testImplementation -----------------
    /* Adds dependency for test source set.
     * For android independent test.
     */

    // JUnit 4 support.
    testImplementation 'junit:junit:4.13.2'
}

apply plugin: 'com.google.gms.google-services'